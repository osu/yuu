$(document).ready(() => {
	$("#logo").prop("src", `/img/waifu_logo/${Math.round(15 * Math.random())}.png`);
	$("#waifu").prop("src", `/img/waifu/${Math.round(7 * Math.random())}.png`);

	particlesJS(
		"particles-js",
		{particles:{number:{value:80,density:{enable:!0,value_area:800}},color:{value:"#ffffff"},shape:{type:"circle",stroke:{width:0,color:"#000000"},polygon:{nb_sides:5},image:{src:"img/github.svg",width:100,height:100}},opacity:{value:0.5,random:!1,anim:{enable:!1,speed:1,opacity_min:0.1,sync:!1}},size:{value:5,random:!0,anim:{enable:!1,speed:40,size_min:0.1,sync:!1}},line_linked:{enable:!0,distance:150,color:"#ffffff",opacity:0.4,width:1},move:{enable:!0,speed:6,direction:"none",random:!1,straight:!1,out_mode:"out",attract:{enable:!1,rotateX:600,rotateY:1200}}},interactivity:{detect_on:"canvas",events:{onhover:{enable:!1,mode:"repulse"},onclick:{enable:!1,mode:"push"},resize:!0},modes:{grab:{distance:400,line_linked:{opacity:1}},bubble:{distance:400,size:40,duration:2,opacity:8,speed:3},repulse:{distance:200},push:{particles_nb:4},remove:{particles_nb:2}}},retina_detect:!1}
	);

	const toast = Swal.mixin({
		toast: true,
		position: "top-end",
		showConfirmButton: 0,
		timer: 3e3
	});

	var strSplit = (d, g, h) => {
		return d && g && h ? d.length < g ? d : d.trim().slice(0, g) + h : void 0
	};

	var upload = (file) => {
		let delete_time = $("select[name=dtime]").val();
		if (["24", "744", "8928"].indexOf(delete_time) == -1) {
			return toast({
				"title": "Invalid delete time",
				"type": "error"
			});
		}
		var data = new FormData();
		data.append("upload[]", file);
		data.append("delete_time", delete_time);
		var itemID = Date.now();
		var progressID = itemID + Date.now();
		var linkID = itemID + progressID + Date.now();
		$(".uploadedFiles").css("display", "block");
		$(".uploadedFiles").append(`
			<li id="${itemID}">
				<a id="${linkID}">
					${strSplit(file.name, 30, " ...")}
				</a>
				<progress class="progress is-primary" value="" max="" id="${progressID}"></progress>
			</li>
		`);
		$.ajax({
			type: "POST",
			url: "/api/upload",
			data: data,
			xhr: () => {
				var xhr = $.ajaxSettings.xhr();
				if (xhr.upload) {
					xhr.addEventListener("progress", (e) => {
						if (e.lengthComputable) {
							$("#" + progressID).prop("value", e.loaded);
							$("#" + progressID).prop("max", e.total);
						}
					}, false);
					return xhr;
				}
			},
			async: true,
			cache: false,
			contentType: false,
			processData: false,
			success: (item) => {
				item = item.items[0];
				$("#" + linkID).html(item.url);
				$("#" + linkID).prop("href", item.url);
				$("#" + linkID).prop("target", "blank");
			},
			error: (err) => {
				console.log(err)
				try {
					err = JSON.parse(err.responseText);
					toast({
						"title": err.error,
						"type": "error"
					});
				} catch (error) {
					toast({
						"title": "Unknown Error",
						"type": "error"
					});
				}
				$("#" + itemID).remove();
				if (1 > $(".uploadedFiles").children().length) {
					$(".uploadedFiles").css("display", "none");
				}
			}
		});
	}

	$("#upload").click(() => {
		$("#input").trigger("click");
	});

	$("form").submit(d => {
		d.preventDefault();
	});

	$("#input").change(d => {
		d.preventDefault();
		if ($("#input")[0].files.length > 0) {
			for (let i = 0; i < $("#input")[0].files.length; i++) {
				let file = $("#input")[0].files[i];
				upload(file);
			}
		}
	});

	$(document).on("dragenter", "#upload", () => {
		$("#upload").css("border", "3px dashed #371c42");
	});

	$(document).on("dragover", "#upload", (d) => {
		d.preventDefault();
		d.stopPropagation();
		$("#upload").css("border", "3px dashed #371c42");
	});

	$(document).on("dragleave", "#upload", (d) => {
		d.preventDefault();
		d.stopPropagation();
		$("#upload").css("border", "none");
	});

	$(document).on("drop", "#upload", (d) => {
		d.preventDefault();
		$("#upload").css("border", "none");
		if (d.originalEvent.dataTransfer && 0 < d.originalEvent.dataTransfer.files.length) {
			for (let i = 0; i < d.originalEvent.dataTransfer.files.length; i++) {
				let file = d.originalEvent.dataTransfer.files[i];
				upload(file);
			}
		}
	});
});